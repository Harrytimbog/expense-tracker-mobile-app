{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useContext, useLayoutEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ExpenseForm from \"../components/ManageExpense/ExpenseForm\";\nimport IconButton from \"../components/UI/IconButton\";\nimport LoadingOverlay from \"../components/UI/LoadingOverlay\";\nimport { GlobalStyles } from \"../constants/styles\";\nimport { ExpensesContext } from \"../store/expenses-context\";\nimport { deleteExpense, storeExpense, updateExpense } from \"../util/http\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ManageExpense = function ManageExpense(_ref) {\n  var _route$params;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSubmiting = _useState2[0],\n      setIsSubmiting = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var expensesCtx = useContext(ExpensesContext);\n  var editedExpenseId = (_route$params = route.params) == null ? void 0 : _route$params.expenseId;\n  var isEditing = !!editedExpenseId;\n  var selectedExpense = expensesCtx.expenses.find(function (expense) {\n    return expense.id === editedExpenseId;\n  });\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: isEditing ? \"Edit Expense\" : \"Add Expense\"\n    });\n  }, [navigation, isEditing]);\n\n  function deleteExpenseHandler() {\n    return _regeneratorRuntime.async(function deleteExpenseHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsSubmiting(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(deleteExpense(editedExpenseId));\n\n          case 4:\n            expensesCtx.deleteExpense(editedExpenseId);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            setError();\n\n          case 10:\n            navigation.goBack();\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 7]], Promise);\n  }\n\n  function CancelHandler() {\n    navigation.goBack();\n  }\n\n  function confirmHandler(expenseData) {\n    var id;\n    return _regeneratorRuntime.async(function confirmHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setIsSubmiting(true);\n\n            if (!isEditing) {\n              _context2.next = 7;\n              break;\n            }\n\n            expensesCtx.updateExpense(editedExpenseId, expenseData);\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(updateExpense(editedExpenseId, expenseData));\n\n          case 5:\n            _context2.next = 11;\n            break;\n\n          case 7:\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(storeExpense(expenseData));\n\n          case 9:\n            id = _context2.sent;\n            expensesCtx.addExpense(_objectSpread(_objectSpread({}, expenseData), {}, {\n              id: id\n            }));\n\n          case 11:\n            navigation.goBack();\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  if (isSubmiting) {\n    return _jsx(LoadingOverlay, {});\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ExpenseForm, {\n      submitButtonLabel: isEditing ? \"Update\" : \"Add\",\n      onCancel: CancelHandler,\n      onSubmit: confirmHandler,\n      defaultValues: selectedExpense\n    }), isEditing && _jsx(View, {\n      style: styles.deleteContainer,\n      children: _jsx(IconButton, {\n        icon: \"trash\",\n        color: GlobalStyles.colors.error500,\n        size: 36,\n        onPress: deleteExpenseHandler\n      })\n    })]\n  });\n};\n\nexport default ManageExpense;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 24,\n    backgroundColor: GlobalStyles.colors.primary800\n  },\n  deleteContainer: {\n    marginTop: 16,\n    paddingTop: 8,\n    borderTopWidth: 2,\n    borderTopColor: GlobalStyles.colors.primary200,\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"names":["useContext","useLayoutEffect","useState","ExpenseForm","IconButton","LoadingOverlay","GlobalStyles","ExpensesContext","deleteExpense","storeExpense","updateExpense","ManageExpense","route","navigation","isSubmiting","setIsSubmiting","error","setError","expensesCtx","editedExpenseId","params","expenseId","isEditing","selectedExpense","expenses","find","expense","id","setOptions","title","deleteExpenseHandler","goBack","CancelHandler","confirmHandler","expenseData","addExpense","styles","container","deleteContainer","colors","error500","StyleSheet","create","flex","padding","backgroundColor","primary800","marginTop","paddingTop","borderTopWidth","borderTopColor","primary200","alignItems"],"sources":["/home/harrytimbog/code/Harrytimbog/react-native/expense-tracker-mobile-app/screens/ManageExpense.js"],"sourcesContent":["import { useContext, useLayoutEffect, useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport ExpenseForm from \"../components/ManageExpense/ExpenseForm\";\nimport IconButton from \"../components/UI/IconButton\";\nimport LoadingOverlay from \"../components/UI/LoadingOverlay\";\nimport { GlobalStyles } from \"../constants/styles\";\nimport { ExpensesContext } from \"../store/expenses-context\";\nimport { deleteExpense, storeExpense, updateExpense } from \"../util/http\";\n\nconst ManageExpense = ({ route, navigation }) => {\n  const [isSubmiting, setIsSubmiting] = useState(false);\n  const [error, setError] = useState();\n\n  const expensesCtx = useContext(ExpensesContext);\n  const editedExpenseId = route.params?.expenseId;\n\n  const isEditing = !!editedExpenseId; // Javascrpt trick to convert a value to a boolean (falsy value to false, truthy value to true)\n\n  const selectedExpense = expensesCtx.expenses.find(\n    (expense) => expense.id === editedExpenseId\n  );\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: isEditing ? \"Edit Expense\" : \"Add Expense\",\n    });\n  }, [navigation, isEditing]);\n\n  async function deleteExpenseHandler() {\n    setIsSubmiting(true);\n    try {\n      await deleteExpense(editedExpenseId);\n      // setIsSubmiting(false); I commented this out because the screen will be close either ways due to navigation.goBack after the action\n      expensesCtx.deleteExpense(editedExpenseId);\n    } catch (error) {\n      setError();\n    }\n    navigation.goBack();\n  }\n\n  function CancelHandler() {\n    navigation.goBack();\n  }\n\n  async function confirmHandler(expenseData) {\n    setIsSubmiting(true);\n    if (isEditing) {\n      expensesCtx.updateExpense(editedExpenseId, expenseData);\n      await updateExpense(editedExpenseId, expenseData);\n    } else {\n      const id = await storeExpense(expenseData);\n      expensesCtx.addExpense({ ...expenseData, id: id });\n    }\n    navigation.goBack();\n  }\n\n  if (isSubmiting) {\n    return <LoadingOverlay />;\n  }\n\n  return (\n    <View style={styles.container}>\n      <ExpenseForm\n        submitButtonLabel={isEditing ? \"Update\" : \"Add\"}\n        onCancel={CancelHandler}\n        onSubmit={confirmHandler}\n        defaultValues={selectedExpense}\n      />\n      {isEditing && (\n        <View style={styles.deleteContainer}>\n          <IconButton\n            icon=\"trash\"\n            color={GlobalStyles.colors.error500}\n            size={36}\n            onPress={deleteExpenseHandler}\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ManageExpense;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 24,\n    backgroundColor: GlobalStyles.colors.primary800,\n  },\n  deleteContainer: {\n    marginTop: 16,\n    paddingTop: 8,\n    borderTopWidth: 2,\n    borderTopColor: GlobalStyles.colors.primary200,\n    alignItems: \"center\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}