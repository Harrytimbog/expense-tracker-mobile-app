{"ast":null,"code":"import { useLayoutEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar ManageExpense = function ManageExpense(_ref) {\n  var _route$params;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var editedExpenseId = (_route$params = route.params) == null ? void 0 : _route$params.expenseId;\n  var isEditing = !!editedExpenseId;\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: isEditing ? \"Edit Expense\" : \"Add Expense\"\n    });\n  }, []);\n  return _jsx(Text, {\n    children: \"Manage Expense Screen\"\n  });\n};\n\nexport default ManageExpense;","map":{"version":3,"names":["useLayoutEffect","ManageExpense","route","navigation","editedExpenseId","params","expenseId","isEditing","setOptions","title"],"sources":["/home/harrytimbog/code/Harrytimbog/react-native/expense-tracker-mobile-app/screens/ManageExpense.js"],"sourcesContent":["import { useLayoutEffect } from \"react\";\nimport { Text } from \"react-native\";\n\nconst ManageExpense = ({ route, navigation }) => {\n  const editedExpenseId = route.params?.expenseId;\n\n  const isEditing = !!editedExpenseId; // Javascrpt trick to convert a value to a boolean (falsy value to false, truthy value to true)\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: isEditing ? \"Edit Expense\" : \"Add Expense\",\n    });\n  }, []);\n\n  return <Text>Manage Expense Screen</Text>;\n};\n\nexport default ManageExpense;\n"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;;;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA2B;EAAA;;EAAA,IAAxBC,KAAwB,QAAxBA,KAAwB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;EAC/C,IAAMC,eAAe,oBAAGF,KAAK,CAACG,MAAT,qBAAG,cAAcC,SAAtC;EAEA,IAAMC,SAAS,GAAG,CAAC,CAACH,eAApB;EAEAJ,eAAe,CAAC,YAAM;IACpBG,UAAU,CAACK,UAAX,CAAsB;MACpBC,KAAK,EAAEF,SAAS,GAAG,cAAH,GAAoB;IADhB,CAAtB;EAGD,CAJc,EAIZ,EAJY,CAAf;EAMA,OAAO,KAAC,IAAD;IAAA;EAAA,EAAP;AACD,CAZD;;AAcA,eAAeN,aAAf"},"metadata":{},"sourceType":"module"}