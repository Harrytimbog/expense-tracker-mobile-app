{"ast":null,"code":"import Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { GlobalStyles } from \"../../constants/styles\";\nimport { getFormattedDate } from \"../../util/date\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ExpenseItem = function ExpenseItem(_ref) {\n  var description = _ref.description,\n      amount = _ref.amount,\n      date = _ref.date;\n\n  function expensePressHandler() {}\n\n  return _jsx(Pressable, {\n    onPress: expensePressHandler,\n    children: _jsxs(View, {\n      style: styles.expenseItem,\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: [styles.textBase, styles.description],\n          children: description\n        }), _jsx(Text, {\n          style: styles.textBase,\n          children: getFormattedDate(date)\n        })]\n      }), _jsx(View, {\n        style: styles.amountContainer,\n        children: _jsx(Text, {\n          style: styles.amount,\n          children: amount.toFixed(2)\n        })\n      })]\n    })\n  });\n};\n\nexport default ExpenseItem;\nvar styles = StyleSheet.create({\n  pressed: {\n    opacity: 0.75\n  },\n  expenseItem: {\n    padding: 12,\n    marginVertical: 8,\n    backgroundColor: GlobalStyles.colors.primary500,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    borderRadius: 6,\n    elevation: 3,\n    shadowColor: GlobalStyles.colors.gray500,\n    shadowRadius: 4,\n    shadowOffset: {\n      width: 1,\n      height: 1\n    },\n    shadowOpacity: 0.4\n  },\n  textBase: {\n    color: GlobalStyles.colors.primary50\n  },\n  description: {\n    fontSize: 16,\n    marginBottom: 4,\n    fontWeight: \"bold\"\n  },\n  amountContainer: {\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4,\n    minWidth: 80\n  },\n  amount: {\n    color: GlobalStyles.colors.primary500,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"names":["GlobalStyles","getFormattedDate","ExpenseItem","description","amount","date","expensePressHandler","styles","expenseItem","textBase","amountContainer","toFixed","StyleSheet","create","pressed","opacity","padding","marginVertical","backgroundColor","colors","primary500","flexDirection","justifyContent","borderRadius","elevation","shadowColor","gray500","shadowRadius","shadowOffset","width","height","shadowOpacity","color","primary50","fontSize","marginBottom","fontWeight","paddingHorizontal","paddingVertical","alignItems","minWidth"],"sources":["/home/harrytimbog/code/Harrytimbog/react-native/expense-tracker-mobile-app/components/ExpensesOutput/ExpenseItem.js"],"sourcesContent":["import { Pressable, StyleSheet, Text, View } from \"react-native\";\nimport { GlobalStyles } from \"../../constants/styles\";\nimport { getFormattedDate } from \"../../util/date\";\n\nconst ExpenseItem = ({ description, amount, date }) => {\n  function expensePressHandler() {}\n\n  return (\n    <Pressable onPress={expensePressHandler}>\n      <View style={styles.expenseItem}>\n        <View>\n          <Text style={[styles.textBase, styles.description]}>\n            {description}\n          </Text>\n          <Text style={styles.textBase}>{getFormattedDate(date)}</Text>\n        </View>\n        <View style={styles.amountContainer}>\n          <Text style={styles.amount}>{amount.toFixed(2)}</Text>\n        </View>\n      </View>\n    </Pressable>\n  );\n};\n\nexport default ExpenseItem;\n\nconst styles = StyleSheet.create({\n  pressed: {\n    opacity: 0.75,\n  },\n  expenseItem: {\n    padding: 12,\n    marginVertical: 8,\n    backgroundColor: GlobalStyles.colors.primary500,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    borderRadius: 6,\n    elevation: 3,\n    shadowColor: GlobalStyles.colors.gray500,\n    shadowRadius: 4,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.4,\n  },\n  textBase: {\n    color: GlobalStyles.colors.primary50,\n  },\n  description: {\n    fontSize: 16,\n    marginBottom: 4,\n    fontWeight: \"bold\",\n  },\n  amountContainer: {\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4,\n    minWidth: 80,\n  },\n  amount: {\n    color: GlobalStyles.colors.primary500,\n    fontWeight: \"bold\",\n  },\n});\n"],"mappings":";;;;AACA,SAASA,YAAT;AACA,SAASC,gBAAT;;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAmC;EAAA,IAAhCC,WAAgC,QAAhCA,WAAgC;EAAA,IAAnBC,MAAmB,QAAnBA,MAAmB;EAAA,IAAXC,IAAW,QAAXA,IAAW;;EACrD,SAASC,mBAAT,GAA+B,CAAE;;EAEjC,OACE,KAAC,SAAD;IAAW,OAAO,EAAEA,mBAApB;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACC,WAApB;MAAA,WACE,MAAC,IAAD;QAAA,WACE,KAAC,IAAD;UAAM,KAAK,EAAE,CAACD,MAAM,CAACE,QAAR,EAAkBF,MAAM,CAACJ,WAAzB,CAAb;UAAA,UACGA;QADH,EADF,EAIE,KAAC,IAAD;UAAM,KAAK,EAAEI,MAAM,CAACE,QAApB;UAAA,UAA+BR,gBAAgB,CAACI,IAAD;QAA/C,EAJF;MAAA,EADF,EAOE,KAAC,IAAD;QAAM,KAAK,EAAEE,MAAM,CAACG,eAApB;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAEH,MAAM,CAACH,MAApB;UAAA,UAA6BA,MAAM,CAACO,OAAP,CAAe,CAAf;QAA7B;MADF,EAPF;IAAA;EADF,EADF;AAeD,CAlBD;;AAoBA,eAAeT,WAAf;AAEA,IAAMK,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BC,OAAO,EAAE;IACPC,OAAO,EAAE;EADF,CADsB;EAI/BP,WAAW,EAAE;IACXQ,OAAO,EAAE,EADE;IAEXC,cAAc,EAAE,CAFL;IAGXC,eAAe,EAAElB,YAAY,CAACmB,MAAb,CAAoBC,UAH1B;IAIXC,aAAa,EAAE,KAJJ;IAKXC,cAAc,EAAE,eALL;IAMXC,YAAY,EAAE,CANH;IAOXC,SAAS,EAAE,CAPA;IAQXC,WAAW,EAAEzB,YAAY,CAACmB,MAAb,CAAoBO,OARtB;IASXC,YAAY,EAAE,CATH;IAUXC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAT;MAAYC,MAAM,EAAE;IAApB,CAVH;IAWXC,aAAa,EAAE;EAXJ,CAJkB;EAiB/BtB,QAAQ,EAAE;IACRuB,KAAK,EAAEhC,YAAY,CAACmB,MAAb,CAAoBc;EADnB,CAjBqB;EAoB/B9B,WAAW,EAAE;IACX+B,QAAQ,EAAE,EADC;IAEXC,YAAY,EAAE,CAFH;IAGXC,UAAU,EAAE;EAHD,CApBkB;EAyB/B1B,eAAe,EAAE;IACf2B,iBAAiB,EAAE,EADJ;IAEfC,eAAe,EAAE,CAFF;IAGfpB,eAAe,EAAE,OAHF;IAIfI,cAAc,EAAE,QAJD;IAKfiB,UAAU,EAAE,QALG;IAMfhB,YAAY,EAAE,CANC;IAOfiB,QAAQ,EAAE;EAPK,CAzBc;EAkC/BpC,MAAM,EAAE;IACN4B,KAAK,EAAEhC,YAAY,CAACmB,MAAb,CAAoBC,UADrB;IAENgB,UAAU,EAAE;EAFN;AAlCuB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}