{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useContext, useEffect, useState } from \"react\";\nimport ExpensesOutput from \"../components/ExpensesOutput/ExpensesOutput\";\nimport { ExpensesContext } from \"../store/expenses-context\";\nimport { getDateMinusDays } from \"../util/date\";\nimport { fetchExpenses } from \"../util/http\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar RecentExpenses = function RecentExpenses() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      fetchedExpenses = _useState2[0],\n      setFetchedExpenses = _useState2[1];\n\n  useEffect(function () {\n    function getExpenses() {\n      var expenses;\n      return _regeneratorRuntime.async(function getExpenses$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetchExpenses());\n\n            case 2:\n              expenses = _context.sent;\n              setFetchedExpenses(expenses);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getExpenses();\n  }, []);\n  var recentExpenses = fetchedExpenses.filter(function (expense) {\n    var today = new Date();\n    var days7DaysAgo = getDateMinusDays(today, 7);\n    return expense.date >= days7DaysAgo && expense.date <= today;\n  });\n  return _jsx(ExpensesOutput, {\n    expenses: recentExpenses,\n    expensesPeriod: \"Last 7 Days\",\n    fallbackText: \"No expenses registered for the last 7 days.\"\n  });\n};\n\nexport default RecentExpenses;","map":{"version":3,"names":["useContext","useEffect","useState","ExpensesOutput","ExpensesContext","getDateMinusDays","fetchExpenses","RecentExpenses","fetchedExpenses","setFetchedExpenses","getExpenses","expenses","recentExpenses","filter","expense","today","Date","days7DaysAgo","date"],"sources":["/home/harrytimbog/code/Harrytimbog/react-native/expense-tracker-mobile-app/screens/RecentExpenses.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport ExpensesOutput from \"../components/ExpensesOutput/ExpensesOutput\";\nimport { ExpensesContext } from \"../store/expenses-context\";\nimport { getDateMinusDays } from \"../util/date\";\nimport { fetchExpenses } from \"../util/http\";\n\nconst RecentExpenses = () => {\n  // const expensesCtx = useContext(ExpensesContext);\n  const [fetchedExpenses, setFetchedExpenses] = useState([]);\n\n  useEffect(() => {\n    async function getExpenses() {\n      const expenses = await fetchExpenses();\n      setFetchedExpenses(expenses);\n    }\n\n    getExpenses();\n  }, []);\n\n  const recentExpenses = fetchedExpenses.filter((expense) => {\n    const today = new Date();\n    const days7DaysAgo = getDateMinusDays(today, 7);\n\n    return expense.date >= days7DaysAgo && expense.date <= today;\n  });\n\n  return (\n    <ExpensesOutput\n      expenses={recentExpenses}\n      expensesPeriod=\"Last 7 Days\"\n      fallbackText=\"No expenses registered for the last 7 days.\"\n    />\n  );\n};\n\nexport default RecentExpenses;\n"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,cAAP;AACA,SAASC,eAAT;AACA,SAASC,gBAAT;AACA,SAASC,aAAT;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;EAE3B,gBAA8CL,QAAQ,CAAC,EAAD,CAAtD;EAAA;EAAA,IAAOM,eAAP;EAAA,IAAwBC,kBAAxB;;EAEAR,SAAS,CAAC,YAAM;IACd,SAAeS,WAAf;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACyBJ,aAAa,EADtC;;YAAA;cACQK,QADR;cAEEF,kBAAkB,CAACE,QAAD,CAAlB;;YAFF;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IAKAD,WAAW;EACZ,CAPQ,EAON,EAPM,CAAT;EASA,IAAME,cAAc,GAAGJ,eAAe,CAACK,MAAhB,CAAuB,UAACC,OAAD,EAAa;IACzD,IAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;IACA,IAAMC,YAAY,GAAGZ,gBAAgB,CAACU,KAAD,EAAQ,CAAR,CAArC;IAEA,OAAOD,OAAO,CAACI,IAAR,IAAgBD,YAAhB,IAAgCH,OAAO,CAACI,IAAR,IAAgBH,KAAvD;EACD,CALsB,CAAvB;EAOA,OACE,KAAC,cAAD;IACE,QAAQ,EAAEH,cADZ;IAEE,cAAc,EAAC,aAFjB;IAGE,YAAY,EAAC;EAHf,EADF;AAOD,CA3BD;;AA6BA,eAAeL,cAAf"},"metadata":{},"sourceType":"module"}